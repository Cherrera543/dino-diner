@page
@using DinoDiner.Menu;
@model Website.Pages.MenuModel
@{
    ViewData["Title"] = "Menu";
}
<img src="https://k-state.instructure.com/courses/83099/files/10852332/preview" alt="logo" />
<h1>Menu</h1>


<div id="fullmenu">
    <div id="food">
        @if (Model.AvailableCombos.Any())
        {
            <h2>Combos</h2>
            <h3 style="font-size: 14px; ">Each combo comes with a side of Fryceritops and a Sodasaurus of any flavor!</h3>
        }
        @foreach (MenuItem m in Model.AvailableCombos)
        {
            <div class="menu-item">
                <p style="font-weight: bold; margin-bottom: 0px; margin-top: 8px">
                    @m 
                </p>
                <div class="gridbox">
                    <div class="griditem" style="font-weight: bold;">Size</div>
                    <div class="griditem" style="font-weight: bold;">Price</div>
                    <div class="griditem" style="font-weight: bold;" >Calories</div>
                    <div class="griditem">Small</div>
                    <div class="griditem">@String.Format("{0:C}", m.Price)</div>
                    <div class="griditem">@m.Calories</div>
                    <div class="griditem">Medium</div>
                    <div class="griditem">@String.Format("{0:C}",Model.ChangePrice(m, Size.Medium))</div>
                    <div class="griditem">@Model.ChangeCalories(m, Size.Medium)</div>
                    <div class="griditem">Large</div>
                    <div class="griditem">@String.Format("{0:C}",Model.ChangePrice(m, Size.Large))</div>
                    <div class="griditem">@Model.ChangeCalories(m, Size.Large)</div>
                </div>
                <p style="padding-left: 40px; margin-top: 0px;">
                    <br />
                    Ingredients -
                    @for (int j = 0; j < m.Ingredients.Count; j++)
                    {

                        @m.Ingredients.ElementAt(j)
                        if (j < m.Ingredients.Count - 1)
                        {
                            @:,&nbsp;
                        }
                    }

                </p>
            </div>
        }

        @if (Model.AvailableEntrees.Any())
        {
            <h2>Entrees</h2>
        }
        @foreach (MenuItem m in Model.AvailableEntrees)
        {
    <div class="menu-item">
        <p style="font-weight: bold; margin-bottom: 0px; margin-top: 8px">
            @m: @String.Format("{0:C}", m.Price)
        </p>
       
        <p style="padding-left: 40px; margin-top: 0px;">
            Calories - @m.Calories
            <br />
            Ingredients -
            @for (int j = 0; j < m.Ingredients.Count; j++)
            {

                @m.Ingredients.ElementAt(j)
                if (j < m.Ingredients.Count - 1)
                {
                    @:,&nbsp;
                }
            }
        </p>
    </div>
        }

        @if (Model.AvailableSides.Any())
        {
            <h2>Sides</h2>
        }
        @foreach (MenuItem m in Model.AvailableSides)
        {
    <div class="menu-item">
        <p style="font-weight: bold; margin-bottom: 0px; margin-top: 8px">
            @m.ToString().Substring(6)
        </p>
        <div class="gridbox">
            <div class="griditem">Size</div>
            <div class="griditem">Price</div>
            <div class="griditem">Calories</div>
            <div class="griditem">Small</div>
            <div class="griditem">@String.Format("{0:C}", m.Price)</div>
            <div class="griditem">@m.Calories</div>
            <div class="griditem">Medium</div>
            <div class="griditem">@String.Format("{0:C}", Model.ChangePrice(m, Size.Medium))</div>
            <div class="griditem">@Model.ChangeCalories(m, Size.Medium)</div>
            <div class="griditem">Large</div>
            <div class="griditem">@String.Format("{0:C}", Model.ChangePrice(m, Size.Large))</div>
            <div class="griditem">@Model.ChangeCalories(m, Size.Large)</div>
        </div>
        <p style="padding-left: 40px; margin-top: 0px;">
            <br />
            Ingredients -
            @for (int j = 0; j < m.Ingredients.Count; j++)
            {


                @m.Ingredients.ElementAt(j)
                if (j < m.Ingredients.Count - 1)
                {
                    @:,&nbsp;
                }

            }
        </p>
    </div>
        }
        @if (Model.AvailableDrinks.Any())
        {
            <h2>Drinks</h2>
        }
        @foreach (MenuItem m in Model.AvailableDrinks)
        {
    <div class="menu-item">
        <p style="font-weight: bold; margin-bottom: 0px; margin-top: 8px">
            @m.ToString().Substring(6)
        </p>
        <div class="gridbox">
            <div class="griditem">Size</div>
            <div class="griditem">Price</div>
            <div class="griditem">Calories</div>
            <div class="griditem">Small</div>
            <div class="griditem">@String.Format("{0:C}", m.Price)</div>
            <div class="griditem">@m.Calories</div>
            <div class="griditem">Medium</div>
            <div class="griditem">@String.Format("{0:C}", Model.ChangePrice(m, Size.Medium))</div>
            <div class="griditem">@Model.ChangeCalories(m, Size.Medium)</div>
            <div class="griditem">Large</div>
            <div class="griditem">@String.Format("{0:C}", Model.ChangePrice(m, Size.Large))</div>
            <div class="griditem">@Model.ChangeCalories(m, Size.Large)</div>
        </div>
        <p style="padding-left: 40px; margin-top: 0px;">
            <br />
            Ingredients -
            @for (int j = 0; j < m.Ingredients.Count; j++)
            {

                @m.Ingredients.ElementAt(j).ToString()
                if (j < m.Ingredients.Count - 1)
                {
                    @:,&nbsp;
                }
            }
        </p>
    </div>
        }
    </div>
    <form method="post">
        <input type="text" name="search" id="search" value=" @Model.search" />

        <input type="submit" value="Search" />
        <input type="submit" value="Apply Filter(s)" />
        <h4> Menu Category</h4>
        <div class="checkbox-list">
            <label>
                <input type="checkbox" name="type" value="Combos" checked="@Model.type.Contains("Combos")" />
                Combos
            </label>

            <label>
                <input type="checkbox" name="type" value="Entrees" checked="@Model.type.Contains("Entrees")" />
                Entrees
            </label>

            <label>
                <input type="checkbox" name="type" value="Sides" checked="@Model.type.Contains("Sides")" />
                Sides
            </label>

            <label>
                <input type="checkbox" name="type" value="Drinks" checked="@Model.type.Contains("Drinks")" />
                Drinks
            </label>
        </div>
        <h4>Price</h4>
        <label>
            Min
            <input id="minimum-Price" type="number" min="0" max="10" step="0.1" value="@Model.mini" name="mini" />
        </label>
        <label>
            Max
            <input id="maximum-Price" type="number" min="0" max="10" step="0.1" value="@Model.maxi" name="maxi" />
        </label>
        <h4>Exclude Ingredients</h4>
        <div class="checkbox-list">
            @for (int i = 0; i < Model.menu.PossibleIngredients.Count; i++)
            {
                <label>
                    <input type="checkbox" name="ingred" value="@Model.menu.PossibleIngredients.ElementAt(i)" checked="@Model.ingred.Contains(Model.menu.PossibleIngredients.ElementAt(i))" />
                    @Model.menu.PossibleIngredients.ElementAt(i)
                </label>
            }
        </div>
    </form>
</div>

